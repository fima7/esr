\frametitle{Tests.}\framesubtitle {Application Sample. Custom Hash Function.}
\begin{lstlisting}[language=C++,basicstyle=\ttfamily\tiny,keywordstyle=\color{red}]
namespace esr {
  template <>
  class hash_function<city::hkey> : public esr::hasher<city::hkey> {
    public:
    explicit hash_function(size_t cardinality = 1, size_t start = 17, size_t prime = 31) :
                          esr::hasher<city::hkey>(cardinality),
                          m_bool_hasher(cardinality), m_int_hasher(cardinality),
                          m_string_hasher(cardinality),
                          m_start(start), m_prime(prime) {}

    uint64_t code(const city::hkey& key) const {
      uint64_t h = m_start;
      h = m_prime * h + m_bool_hasher.code(key.is_capital);
      h = m_prime * h + m_string_hasher.code(key.name);
      h = m_prime * h + m_int_hasher.code(key.year);
      h = m_prime * h + m_int_hasher.code(key.area);
      h = m_prime * h + m_string_hasher.code(key.state);
      return h;
    }

    private:
    size_t m_start;
    size_t m_prime;
    esr::hash_function<bool> m_bool_hasher;
    esr::hash_function<int> m_int_hasher;
    esr::hash_function<std::string> m_string_hasher;
  };
}  // namespace esr
\end{lstlisting}

